#ifndef CONFIG_H_IN_95GLRFZR
#define CONFIG_H_IN_95GLRFZR

#cmakedefine HAVE_GLIBC

#cmakedefine HAVE_FWRITE_UNLOCKED
#cmakedefine HAVE_FPUTS_UNLOCKED
#cmakedefine HAVE_FPUTC_UNLOCKED
#cmakedefine HAVE_FPRINTF_UNLOCKED

#cmakedefine HAVE_ERROR_H
#cmakedefine HAVE_ERROR
#cmakedefine HAVE_ERROR_AT_LINE

#cmakedefine HAVE_ERR_H
#cmakedefine HAVE_ERR
#cmakedefine HAVE_VERR
#cmakedefine HAVE_ERRC
#cmakedefine HAVE_VERRC
#cmakedefine HAVE_ERRX
#cmakedefine HAVE_VERRX
#cmakedefine HAVE_WARN
#cmakedefine HAVE_VWARN
#cmakedefine HAVE_WARNC
#cmakedefine HAVE_VWARNC
#cmakedefine HAVE_WARNX
#cmakedefine HAVE_VWARNX
#cmakedefine HAVE_ERR_SET_FILE

#cmakedefine HAVE_GETPROGNAME

#ifdef HAVE_ERROR_H
  #include <error.h>
#endif

#ifdef HAVE_ERR_H
  #include <err.h>
#endif

#ifdef HAVE_GLIBC
  extern char *program_invocation_short_name;
  #define PROGRAM_NAME program_invocation_short_name
#elif defined HAVE_GETPROGNAME
  #define PROGRAM_NAME getprogname()
#else
  #error Missing a way to get program name at run time
#endif

#include <stdio.h>
#include <stdlib.h>

#endif /* end of include guard: CONFIG_H_IN_95GLRFZR */
